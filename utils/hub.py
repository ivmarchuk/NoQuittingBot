"""Utilities to generate and update the single hub message."""

from __future__ import annotations

import datetime as dt
from typing import Optional

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from quit_smoke_bot.core.entities.user import User


def progress_bar(current: int, total: int, length: int = 10) -> str:
    if total <= 0:
        return ""  # avoid div/zero
    filled = int((current / total) * length)
    filled = min(max(filled, 0), length)
    return "üü•" * filled + "‚¨ú" * (length - filled)


def build_hub_text(
    user: User,
    smoked_today: int,
    plan_today: int,
    can_smoke: bool,
    seconds_left: Optional[int],
) -> str:
    lines: list[str] = ["üö≠ <b>—Ö–∞–±</b>"]

    # Cigarettes progress
    bar = progress_bar(smoked_today, plan_today)
    lines.append(f"–°–∏–≥–∞—Ä–µ—Ç—ã —Å–µ–≥–æ–¥–Ω—è: {smoked_today}/{plan_today}  {bar}")

    # Next cigarette info
    if can_smoke:
        lines.append("<b>–ù—É –ø–æ–∫—É—Ä–∏</b>")
    else:
        minutes = seconds_left // 60 if seconds_left else 0
        lines.append(f"üö´ –î–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–∏–≥–∞—Ä–µ—Ç—ã: {minutes} –º–∏–Ω")

    # –§–∏–Ω–∞–Ω—Å—ã, –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ–ø–µ—Ä—å –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (—Ç–æ–∫–µ–Ω—ã/–≤–æ–ª—è —É–±—Ä–∞–Ω—ã)
    # lines.append(f"‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª: {user.interval_minutes} –º–∏–Ω")
    # streak_target = 3
    # lines.append(f"–ë–µ–∑ —Å—Ä—ã–≤–æ–≤: {user.days_success_streak}/{streak_target} –¥–Ω–µ–π")

    # Finances
    lines.append(f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {user.spent:.2f} z≈Ç")
    lines.append(f"–°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: {user.savings:.2f} z≈Ç")

    return "\n".join(lines)


def build_hub_keyboard(can_smoke: bool, allow_undo: bool) -> InlineKeyboardMarkup:
    """–°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ (+5 –º–∏–Ω—É—Ç)."""
    smoke_btn = InlineKeyboardButton(text="üö¨ –ö—É—Ä—é —Å–µ–π—á–∞—Å", callback_data="SMOKE_NOW")

    row1 = [smoke_btn]
    if allow_undo:
        row1.append(InlineKeyboardButton(text="‚Ü©Ô∏è –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="UNDO"))

    row2 = [
        InlineKeyboardButton(text="‚ÑπÔ∏è FAQ", callback_data="FAQ"),
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="REFRESH"),
    ]

    return InlineKeyboardMarkup(inline_keyboard=[row1, row2]) 